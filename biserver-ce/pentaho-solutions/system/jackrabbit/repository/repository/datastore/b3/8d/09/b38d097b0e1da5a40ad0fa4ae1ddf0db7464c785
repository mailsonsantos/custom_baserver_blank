<?xml version="1.0" encoding="UTF-8"?>
<CDADescriptor>
   <DataSources>
      <Connection id="sampleQuery" type="scripting.scripting">
         <Initscript></Initscript>
         <Language>beanshell</Language>
      </Connection>
      <Connection id="sqlQuery" type="sql.jndi">
         <Jndi>SampleData</Jndi>
      </Connection>
   </DataSources>
   <DataAccess access="public" cache="true" cacheDuration="3600" connection="sampleQuery"
               id="sampleQuery"
               type="scriptable">
      <Columns/>
      <Parameters/>
      <Query>import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;

String[] columnNames = new String[]{
"series",
"category",
"value"
};


Class[] columnTypes = new Class[]{
String.class,
String.class,
Integer.class
};

TypedTableModel model = new TypedTableModel(columnNames, columnTypes);

model.addRow(new Object[]{ new String("ADC"), new String("Caitlyn"), new Integer("10") });
model.addRow(new Object[]{ new String("ADC"), new String("Vayne"), new Integer("20") });
model.addRow(new Object[]{ new String("ADC"), new String("Ashe"), new Integer("30") });
model.addRow(new Object[]{ new String("ADC"), new String("Lucian"), new Integer("5") });
model.addRow(new Object[]{ new String("ADC"), new String("Tristana"), new Integer("25") });
model.addRow(new Object[]{ new String("ADC"), new String("Kog'Maw"), new Integer("7") });

model.addRow(new Object[]{ new String("APC"), new String("Kog'Maw"), new Integer("20") });
model.addRow(new Object[]{ new String("APC"), new String("Fizz"), new Integer("20") });
model.addRow(new Object[]{ new String("APC"), new String("Tristana"), new Integer("40") });
model.addRow(new Object[]{ new String("APC"), new String("Lux"), new Integer("80") });
model.addRow(new Object[]{ new String("APC"), new String("Kassadin"), new Integer("1") });
model.addRow(new Object[]{ new String("APC"), new String("LeBlanc"), new Integer("23") });

model.addRow(new Object[]{ new String("Tank"), new String("Mundo"), new Integer("2") });
model.addRow(new Object[]{ new String("Tank"), new String("Shen"), new Integer("7") });


model.addRow(new Object[]{ new String("Jungler"), new String("Warwick"), new Integer("5") });
model.addRow(new Object[]{ new String("Jungler"), new String("Hecarim"), new Integer("4") });

model.addRow(new Object[]{ new String("Support"), new String("Braum"), new Integer("50") });
model.addRow(new Object[]{ new String("Support"), new String("Leona"), new Integer("50") });
model.addRow(new Object[]{ new String("Support"), new String("Soraka"), new Integer("7") });

return model;</Query>
   </DataAccess>
   <DataAccess access="public" cache="true" cacheDuration="3600" connection="sqlQuery"
               id="sqlQuery"
               type="sql">
      <Columns/>
      <Parameters>
         <Parameter default="Classic Cars" name="productLine" type="String"/>
         <Parameter default="APAC" name="territory" type="String"/>
      </Parameters>
      <Query>SELECT
c.CUSTOMERNAME as customer, sum(f.TOTALPRICE) as total
FROM ORDERFACT f
inner join PRODUCTS p on ( p.PRODUCTCODE = f.PRODUCTCODE )
inner join CUSTOMER_W_TER c on (c.CUSTOMERNUMBER = f.CUSTOMERNUMBER)
where p.PRODUCTLINE=${productLine}
and c.TERRITORY=${territory}
group by c.CUSTOMERNAME
order by total desc</Query>
   </DataAccess>
</CDADescriptor>